install.packages(c("dplyr", "ggplot2"))
install.packages("Rtools")
write('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', file = "~/.Renviron", append = TRUE)
demo()
write('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', file = "~/.Renviron", append = TRUE)
q()
Sys.which("make")
install.packages("jsonlite", type = "source")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab1/zad1_5.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab1/zad1_5.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab1/zad1_3.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab2/zad2_2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab2/zad2_2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab2/zad2_2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab2/zad2_2.R")
install.packages("MASS")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab2/zad2_2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab2/zad2_2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab2/zad2_2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab2/zad2_2.R")
fit <- fitdistr(sample, densfun = 'exponential')
sample = c(483, 705, 2623, 347, 620, 2719, 1035, 421)
#estymator reczny
cat('Estymator reczny', 1/mean(sample))
library('MASS')
fit <- fitdistr(sample, densfun = 'exponential')
cat('Estymator MASS', fit)
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab2/zad2_2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab2/zad2_2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab2/zad2_2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab2/zad2_2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab2/zad2_2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab2/zad2_2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab2/zad2_2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab2/zad2_2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab2/zad2_2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab2/zad2_2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab2/zad2_2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab2/zad2_2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab2/zad2_2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab1/lab1.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab1/lab1.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab1/lab1.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab1/lab1.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab1/lab1.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab1/zad1_3.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab1/lab1.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab1/lab1.R")
print(df$wzrost[df$bmi >= 20.7 & df$bmi < 26.5])
df$wzrost[df$bmi >= 20.7 & df$bmi < 26.5]
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab1/zad1_5.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab1/zad1_5.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab1/zad1_5.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab1/zad1_5.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab1/zad1_5.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab1/zad1_5.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab1/zad1_5.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab1/zad1_5.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab1/zad1_5.R")
dane1.2 <- read.table(file.choose(), header = T)
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab1/lab1.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab1/lab1.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab1/lab1.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab1/lab1.R")
dane1.2 <- read.table(file.choose(), header = T)
head(dane1.2)
hist(dane1.2$Area)
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/SDE/lab2/zad1_BW.R", echo=TRUE)
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/SDE/lab2/zad1_BW.R", echo=TRUE)
data
data.nb
data.nb.pred <- predict(data.nb, data)
data.nb.pred
data.nb.pred <- predict(data.nb, data, type = "raw")
data.nb.pred <- predict(data.nb, data, type = "raw")
data.nb.pred
data.nb.pred
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/SDE/lab2/zad1_BW.R", echo=TRUE)
data.nb.pred
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/SDE/lab2/zad1_BW.R", echo=TRUE)
data.nb.pred
data.nb.pred$class
data.nb.pred$1
data.nb.pred
xp <- seq(-10, 10, 0.1)
yp <- seq(-10, 10, 0.1)
gr <- expand.grid(x = xp, y = yp)
xp
gr
gr[:10,:]
gr[1:10]
gr[1:10,]
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/SDE/lab2/zad1_BW.R", echo=TRUE)
pi1
me1
me2
se1
Se1
X1[,1:2]
X1
return(pi1 * dmvnorm(X, m1, S) / (pi1 * dmvnorm(X, m1, S) + pi2 * dmvnorm(X, m2, S)))
f.nb <- function(X, m1, m2, S, pi1, pi2) {
return(pi1 * dmvnorm(X, m1, S) / (pi1 * dmvnorm(X, m1, S) + pi2 * dmvnorm(X, m2, S)))
}
contour(xp, yp, matrix(f.nb(gr, me1, me2, Se1, Se2, pi1, pi2), length(xp)), add = T, levels = 0.5, lwd = 2, lty = 2, col = "blue")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/SDE/lab2/zad1_BW.R", echo=TRUE)
f.nb <- function(X, m1, m2, S1, S2, pi1, pi2) {
return(pi1 * dmvnorm(X, m1, S1) / (pi1 * dmvnorm(X, m1, S1) + pi2 * dmvnorm(X, m2, S2)))
}
contour(xp, yp, matrix(f.nb(gr, me1, me2, Se1, Se2, pi1, pi2), length(xp)), add = T, levels = 0.5, lwd = 2, lty = 2, col = "blue")
X1
m1x = mean(X1$x)
m1x
?dnorm
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/SDE/lab2/zad1_BW.R", echo=TRUE)
contour(xp, yp, matrix(f.nb(gr, m1x, m1y, m2x, m2y, sd1x, sd1y, sd2x, sd2y, pi1, pi2), length(xp)), add = T, levels = 0.5, lwd = 2, lty = 2, col = "blue")
gr
gr[,1]
X[,2]
gr[,2]
return(pi1 * dnorm(X[,1], m1x, sd1x) * dnorm(X[,2], m1y, sd1y) / (pi1 * dnorm(X[,1], m1x, sd1x) * dnorm(X[,2], m1y, sd1y) + pi2 * dnorm(X[,1], m2x, sd2x) * dnorm(X[,2], m2y, sd2y)))
f.nb <- function(X, m1x, m1y, m2x, m2y, sd1x, sd1y, sd2x, sd2y, pi1, pi2) {
return(pi1 * dnorm(X[,1], m1x, sd1x) * dnorm(X[,2], m1y, sd1y) / (pi1 * dnorm(X[,1], m1x, sd1x) * dnorm(X[,2], m1y, sd1y) + pi2 * dnorm(X[,1], m2x, sd2x) * dnorm(X[,2], m2y, sd2y)))
}
contour(xp, yp, matrix(f.nb(gr, m1x, m1y, m2x, m2y, sd1x, sd1y, sd2x, sd2y, pi1, pi2), length(xp)), add = T, levels = 0.5, lwd = 2, lty = 2, col = "blue")
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/SDE/lab2/zad1_BW.R", echo=TRUE)
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/SDE/lab2/zad1_BW.R", echo=TRUE)
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/SDE/lab2/zad1_BW.R", echo=TRUE)
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/SDE/lab2/zad1_BW.R", echo=TRUE)
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/SDE/lab2/zad1_BW.R", echo=TRUE)
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/SDE/lab2/zad1_BW.R", echo=TRUE)
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/SDE/lab2/zad1_BW.R", echo=TRUE)
me1
m1x
m1y
Se1
sd1x
sd1x * sd1x
sd1y * sd1y
setwd("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab3")
t.test(dane, mu = 5.2, alternative = 'less')
dane <- c(5.21, 5.15, 5.20, 5.48, 5.19, 5.25, 5.09, 5.17, 4.94, 5.11)
t.test(dane, mu = 5.2, alternative = 'less')
#b) P(przyjmie H1 | mu = 5.15) = moc.testu(mu = 5.15)
power.t.test(n = length(dane), delta = 5.2 -5.15, sd = sd(dane), type = 'one.sample', alternative = 'onr.sieded')
#b) P(przyjmie H1 | mu = 5.15) = moc.testu(mu = 5.15)
power.t.test(n = length(dane), delta = 5.2 -5.15, sd = sd(dane), type = 'one.sample', alternative = 'onr.sided')
#b) P(przyjmie H1 | mu = 5.15) = moc.testu(mu = 5.15)
power.t.test(n = length(dane), delta = 5.2 -5.15, sd = sd(dane), type = 'one.sample', alternative = 'one.sided')
#c) Szukamu mu, takiego aby p = P(przyjmie H1 | mu = ?)
power.t.test(n = length(dane), sd = sd(dane), type = 'one.sample', alternative = 'one.sided', power = 0.8)
delta = 0.1164867
mu = 5.2 - delta
mu = 5.2 - delta; mu
# d) Szukamu n, takiego aby p = P(przyjmie H1 | n = ?) = 0.8
power.t.test(sd = sd(dane), type = 'one.sample', alternative = 'one.sided', power = 0.8, delta = 0.05, sig.level = 0.05)
# e)
sd(dane)
# H0: sigma = 0.2
# H1: sigma < 0.2
statysyka.test <- (length(dane) - 1)*var(dane)/(0.2^2)
statysyka.test
# statystyka = 4.19725
qchisq(0.05, length(dane) - 1)
x = 118
n = 150
x/n
prop.test(x = 118, n = 150, p = 0.8, alternative = 'less')
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab3/zad3_7.R", echo=TRUE)
prop.test(x = 118, n = 150, p = 0.8, alternative = 'two.sided')
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab3/zad3_7.R", echo=TRUE)
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab3/zad3_7.R", echo=TRUE)
source("C:/Users/bogum/Desktop/mgr_studia/semestr2/WdWS/lab4/zad4_1.R", echo=TRUE)
power.prop.test(p1 = 0.17, p2 = 0.14, sig.level = 0.05, alternative = 'one.sided', n = 220)
power.prop.test(p1 = 0.17, p2 = 0.14, sig.level = 0.05, alternative = 'one.sided', n = c(220, 233))
#c)S zukamy n: P(przyjęcie H1 | n=?) = moc.testu(n = ?) >= 0.8
power.prop.test(p1 = 0.17, p2 = 0.14, sig.level = 0.05, alternative = 'one.sided', power = 0.8)
df = read.table(file.choose(), header = T)
df
v1 = df[df$variety == v1]
v1 = df[df$variety == 'v1']
v1 = df[df$variety == "v1"]
df = read.table(file.choose(), header = T)
df
v1 = df$yield[df$variety == "v1"]
v2 = df$yield[df$variety == "v2"]
# Jeśli sigma_x = sigma_y => var.equal = T
# Test wariancji:
# H0: sigma_x = sigma_y
# H1: sigma_x != sigma_y
# Rozklady normalne, wiec mozna uzywac var.test
var.test(v1, v2)
?t.test
# p-value = 0.08542 < 0.1, odrzucamy H0 - wariancje nie sa rowne
t.test(x = v1, y = v2, var.equal = F)
# 4.3
df = read.table(file.choose(), header = T)
df
x = df$domS
y = df$domE
View(df)
t.test(paired = T, x = x, y= y, alternative = 'less')
t.test(paired = T, x = x, y= y, alternative = 'greater')
t.test(paired = T, x = x, y= y, alternative = 'less')
